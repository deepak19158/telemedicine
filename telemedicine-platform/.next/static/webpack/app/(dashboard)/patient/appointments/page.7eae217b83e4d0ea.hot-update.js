"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(dashboard)/patient/appointments/page",{

/***/ "(app-pages-browser)/./lib/hooks/useApi.ts":
/*!*****************************!*\
  !*** ./lib/hooks/useApi.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useAdminUsers: function() { return /* binding */ useAdminUsers; },\n/* harmony export */   useApi: function() { return /* binding */ useApi; },\n/* harmony export */   useApiMutation: function() { return /* binding */ useApiMutation; },\n/* harmony export */   useApproveDoctor: function() { return /* binding */ useApproveDoctor; },\n/* harmony export */   useDoctorAvailability: function() { return /* binding */ useDoctorAvailability; },\n/* harmony export */   useDoctorProfile: function() { return /* binding */ useDoctorProfile; },\n/* harmony export */   useDoctorSearch: function() { return /* binding */ useDoctorSearch; },\n/* harmony export */   useLoadingTimeout: function() { return /* binding */ useLoadingTimeout; },\n/* harmony export */   usePagination: function() { return /* binding */ usePagination; },\n/* harmony export */   usePendingDoctors: function() { return /* binding */ usePendingDoctors; },\n/* harmony export */   useRegisterDoctor: function() { return /* binding */ useRegisterDoctor; },\n/* harmony export */   useSearch: function() { return /* binding */ useSearch; },\n/* harmony export */   useSpecializations: function() { return /* binding */ useSpecializations; },\n/* harmony export */   useUpdateDoctorAvailability: function() { return /* binding */ useUpdateDoctorAvailability; },\n/* harmony export */   useUpdateDoctorProfile: function() { return /* binding */ useUpdateDoctorProfile; },\n/* harmony export */   useUpdateUserProfile: function() { return /* binding */ useUpdateUserProfile; },\n/* harmony export */   useUpdateUserStatus: function() { return /* binding */ useUpdateUserStatus; },\n/* harmony export */   useUploadAvatar: function() { return /* binding */ useUploadAvatar; },\n/* harmony export */   useUserAnalytics: function() { return /* binding */ useUserAnalytics; },\n/* harmony export */   useUserProfile: function() { return /* binding */ useUserProfile; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _api_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../api-client */ \"(app-pages-browser)/./lib/api-client.ts\");\n\n\n// Generic hook for API calls\nfunction useApi(apiCall) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    const { immediate = true, onSuccess, onError, timeout = 30000, enabled = true } = options;\n    const [data, setData] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [timedOut, setTimedOut] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [abortController, setAbortController] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [loadingStartTime, setLoadingStartTime] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const fetchData = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        if (!enabled) return;\n        try {\n            console.log(\"\\uD83D\\uDD04 Starting API call...\") // Debug log\n            ;\n            // Cancel previous request if it exists\n            if (abortController) {\n                abortController.abort();\n            }\n            const newAbortController = new AbortController();\n            setAbortController(newAbortController);\n            setLoading(true);\n            setError(null);\n            setTimedOut(false);\n            setLoadingStartTime(Date.now());\n            // Create timeout promise\n            const timeoutPromise = new Promise((_, reject)=>{\n                setTimeout(()=>{\n                    setTimedOut(true);\n                    reject(new Error(\"Request timeout - please check your connection\"));\n                }, timeout);\n            });\n            // Race between API call and timeout\n            const response = await Promise.race([\n                apiCall(),\n                timeoutPromise\n            ]);\n            // Check if request was aborted\n            if (newAbortController.signal.aborted) {\n                console.log(\"\\uD83D\\uDEAB Request was aborted\") // Debug log\n                ;\n                return;\n            }\n            console.log(\"✅ API call response:\", response) // Debug log\n            ;\n            if (response.success) {\n                setData(response.data);\n                onSuccess === null || onSuccess === void 0 ? void 0 : onSuccess(response.data);\n                console.log(\"✅ API call successful, data set\") // Debug log\n                ;\n            } else {\n                const errorMsg = response.error || \"Unknown error occurred\";\n                setError(errorMsg);\n                onError === null || onError === void 0 ? void 0 : onError(errorMsg);\n                console.log(\"❌ API call failed:\", errorMsg) // Debug log\n                ;\n            }\n        } catch (err) {\n            if (err instanceof Error && err.name === \"AbortError\") {\n                console.log(\"\\uD83D\\uDEAB Request was aborted\") // Debug log\n                ;\n                return;\n            }\n            const errorMessage = err instanceof Error ? err.message : \"Network error\";\n            setError(errorMessage);\n            onError === null || onError === void 0 ? void 0 : onError(errorMessage);\n            console.log(\"\\uD83D\\uDCA5 API call error:\", errorMessage) // Debug log\n            ;\n        } finally{\n            setLoading(false);\n            setAbortController(null);\n            console.log(\"\\uD83C\\uDFC1 API call finished, loading set to false\") // Debug log\n            ;\n        }\n    }, [\n        enabled,\n        timeout\n    ]) // Removed apiCall, onSuccess, onError from dependencies to prevent infinite loops\n    ;\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (immediate && enabled) {\n            console.log(\"\\uD83D\\uDE80 useEffect triggered, calling fetchData\") // Debug log\n            ;\n            fetchData();\n        }\n        // Cleanup function to abort ongoing requests\n        return ()=>{\n            if (abortController) {\n                abortController.abort();\n            }\n        };\n    }, [\n        immediate,\n        enabled\n    ]) // Removed fetchData from dependencies\n    ;\n    return {\n        data,\n        loading,\n        error,\n        refetch: fetchData,\n        timedOut\n    };\n}\n// Hook for handling loading timeouts\nfunction useLoadingTimeout(isLoading) {\n    let timeoutMs = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 10000;\n    const [hasTimedOut, setHasTimedOut] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!isLoading) {\n            setHasTimedOut(false);\n            return;\n        }\n        const timer = setTimeout(()=>{\n            setHasTimedOut(true);\n            console.log(\"⏰ Loading timeout reached after\", timeoutMs, \"ms\");\n        }, timeoutMs);\n        return ()=>clearTimeout(timer);\n    }, [\n        isLoading,\n        timeoutMs\n    ]);\n    return hasTimedOut;\n}\n// Hook for mutations (POST, PUT, DELETE)\nfunction useApiMutation(mutationFn) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const mutate = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (variables)=>{\n        try {\n            setLoading(true);\n            setError(null);\n            const response = await mutationFn(variables);\n            if (response.success) {\n                var _options_onSuccess;\n                (_options_onSuccess = options.onSuccess) === null || _options_onSuccess === void 0 ? void 0 : _options_onSuccess.call(options, response.data);\n                return response.data;\n            } else {\n                var _options_onError;\n                setError(response.error || \"Unknown error occurred\");\n                (_options_onError = options.onError) === null || _options_onError === void 0 ? void 0 : _options_onError.call(options, response.error || \"Unknown error occurred\");\n                throw new Error(response.error);\n            }\n        } catch (err) {\n            var _options_onError1;\n            const errorMessage = err instanceof Error ? err.message : \"Network error\";\n            setError(errorMessage);\n            (_options_onError1 = options.onError) === null || _options_onError1 === void 0 ? void 0 : _options_onError1.call(options, errorMessage);\n            throw err;\n        } finally{\n            setLoading(false);\n        }\n    }, [\n        mutationFn,\n        options\n    ]);\n    return {\n        mutate,\n        loading,\n        error,\n        reset: ()=>setError(null)\n    };\n}\n// Specific hooks for common API calls\n// User Profile Hooks\nfunction useUserProfile() {\n    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    const { enabled = true } = options;\n    return useApi(()=>_api_client__WEBPACK_IMPORTED_MODULE_1__.apiClient.user.getProfile(), {\n        enabled,\n        timeout: 15000,\n        onSuccess: (data)=>{\n            console.log(\"\\uD83D\\uDC64 User profile loaded successfully:\", data);\n        },\n        onError: (error)=>{\n            console.log(\"\\uD83D\\uDC64 User profile failed to load:\", error);\n        }\n    });\n}\nfunction useUpdateUserProfile() {\n    return useApiMutation((profileData)=>_api_client__WEBPACK_IMPORTED_MODULE_1__.apiClient.user.updateProfile(profileData));\n}\nfunction useUploadAvatar() {\n    return useApiMutation((file)=>_api_client__WEBPACK_IMPORTED_MODULE_1__.apiClient.user.uploadAvatar(file));\n}\n// Doctor Profile Hooks\nfunction useDoctorProfile() {\n    return useApi(()=>_api_client__WEBPACK_IMPORTED_MODULE_1__.apiClient.doctor.getProfile());\n}\nfunction useUpdateDoctorProfile() {\n    return useApiMutation((profileData)=>_api_client__WEBPACK_IMPORTED_MODULE_1__.apiClient.doctor.updateProfile(profileData));\n}\nfunction useDoctorAvailability() {\n    return useApi(()=>_api_client__WEBPACK_IMPORTED_MODULE_1__.apiClient.doctor.getAvailability());\n}\nfunction useUpdateDoctorAvailability() {\n    return useApiMutation((availabilityData)=>_api_client__WEBPACK_IMPORTED_MODULE_1__.apiClient.doctor.updateAvailability(availabilityData));\n}\n// Doctor Search Hook\nfunction useDoctorSearch() {\n    let params = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return useApi(()=>_api_client__WEBPACK_IMPORTED_MODULE_1__.apiClient.doctor.search(params), {\n        immediate: Object.keys(params).length > 0\n    });\n}\n// Specializations Hook\nfunction useSpecializations() {\n    return useApi(()=>_api_client__WEBPACK_IMPORTED_MODULE_1__.apiClient.doctor.getSpecializations());\n}\n// Admin Hooks\nfunction useAdminUsers() {\n    let params = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return useApi(()=>_api_client__WEBPACK_IMPORTED_MODULE_1__.apiClient.admin.getUsers(params));\n}\nfunction useUpdateUserStatus() {\n    return useApiMutation((data)=>_api_client__WEBPACK_IMPORTED_MODULE_1__.apiClient.admin.updateUserStatus(data.userId, data.isActive, data.reason));\n}\nfunction useUserAnalytics(period) {\n    return useApi(()=>_api_client__WEBPACK_IMPORTED_MODULE_1__.apiClient.admin.getUserAnalytics(period));\n}\nfunction usePendingDoctors() {\n    let params = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return useApi(()=>_api_client__WEBPACK_IMPORTED_MODULE_1__.apiClient.admin.getPendingDoctors(params));\n}\nfunction useApproveDoctor() {\n    return useApiMutation((data)=>_api_client__WEBPACK_IMPORTED_MODULE_1__.apiClient.admin.approveDoctor(data.doctorId, data.action, data.reason, data.assignPatients));\n}\n// Doctor Registration Hook\nfunction useRegisterDoctor() {\n    return useApiMutation((doctorData)=>_api_client__WEBPACK_IMPORTED_MODULE_1__.apiClient.doctor.register(doctorData));\n}\n// Helper hook for pagination\nfunction usePagination() {\n    let initialPage = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1, initialLimit = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 10;\n    const [page, setPage] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialPage);\n    const [limit, setLimit] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialLimit);\n    const nextPage = ()=>setPage((prev)=>prev + 1);\n    const prevPage = ()=>setPage((prev)=>Math.max(1, prev - 1));\n    const goToPage = (newPage)=>setPage(Math.max(1, newPage));\n    const changeLimit = (newLimit)=>{\n        setLimit(newLimit);\n        setPage(1) // Reset to first page when changing limit\n        ;\n    };\n    return {\n        page,\n        limit,\n        nextPage,\n        prevPage,\n        goToPage,\n        changeLimit,\n        params: {\n            page: page.toString(),\n            limit: limit.toString()\n        }\n    };\n}\n// Helper hook for search\nfunction useSearch() {\n    let initialQuery = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"\";\n    const [query, setQuery] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialQuery);\n    const [debouncedQuery, setDebouncedQuery] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialQuery);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const timer = setTimeout(()=>{\n            setDebouncedQuery(query);\n        }, 300) // 300ms debounce\n        ;\n        return ()=>clearTimeout(timer);\n    }, [\n        query\n    ]);\n    return {\n        query,\n        debouncedQuery,\n        setQuery,\n        clearQuery: ()=>setQuery(\"\")\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/hooks/useApi.ts\n"));

/***/ })

});