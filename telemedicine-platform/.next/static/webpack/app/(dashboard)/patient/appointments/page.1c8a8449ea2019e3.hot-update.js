"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(dashboard)/patient/appointments/page",{

/***/ "(app-pages-browser)/./lib/api-client.ts":
/*!***************************!*\
  !*** ./lib/api-client.ts ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiClient: function() { return /* binding */ apiClient; },\n/* harmony export */   createLoadingState: function() { return /* binding */ createLoadingState; },\n/* harmony export */   useApiError: function() { return /* binding */ useApiError; }\n/* harmony export */ });\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth/react */ \"(app-pages-browser)/./node_modules/next-auth/react/index.js\");\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth_react__WEBPACK_IMPORTED_MODULE_0__);\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n// API Client utilities for consistent data fetching\n\nclass ApiClient {\n    async makeRequest(endpoint) {\n        let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        try {\n            const { method = \"GET\", body, headers = {}, isFormData = false } = options;\n            // Get session for authentication\n            const session = await (0,next_auth_react__WEBPACK_IMPORTED_MODULE_0__.getSession)();\n            // For authenticated requests, we'll rely on Next.js cookies\n            // NextAuth automatically handles authentication via httpOnly cookies\n            if (session === null || session === void 0 ? void 0 : session.user) {\n                // Add user info to headers for backend processing\n                headers[\"X-User-ID\"] = session.user.id;\n                headers[\"X-User-Role\"] = session.user.role;\n            }\n            // Prepare request options\n            const requestOptions = {\n                method,\n                headers: {\n                    ...!isFormData && {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    ...headers\n                }\n            };\n            // Add body for non-GET requests\n            if (body && method !== \"GET\") {\n                requestOptions.body = isFormData ? body : JSON.stringify(body);\n            }\n            // Make the request with credentials to include cookies\n            const response = await fetch(\"\".concat(this.baseUrl, \"/api\").concat(endpoint), {\n                ...requestOptions,\n                credentials: \"include\" // Include cookies for authentication\n            });\n            // Parse response\n            const data = await response.json();\n            if (!response.ok) {\n                return {\n                    success: false,\n                    error: data.error || \"HTTP \".concat(response.status, \": \").concat(response.statusText),\n                    data\n                };\n            }\n            return {\n                success: true,\n                data,\n                message: data.message\n            };\n        } catch (error) {\n            console.error(\"API Request Error:\", error);\n            return {\n                success: false,\n                error: error instanceof Error ? error.message : \"Network error occurred\"\n            };\n        }\n    }\n    constructor(){\n        var _this = this;\n        // User Management APIs\n        this.user = {\n            getProfile: ()=>this.makeRequest(\"/users/profile\"),\n            updateProfile: (profileData)=>this.makeRequest(\"/users/profile\", {\n                    method: \"PUT\",\n                    body: profileData\n                }),\n            uploadAvatar: (file)=>{\n                const formData = new FormData();\n                formData.append(\"avatar\", file);\n                return this.makeRequest(\"/users/upload-avatar\", {\n                    method: \"POST\",\n                    body: formData,\n                    isFormData: true\n                });\n            },\n            deactivateAccount: (password, reason)=>this.makeRequest(\"/users/account\", {\n                    method: \"DELETE\",\n                    body: {\n                        password,\n                        reason\n                    }\n                })\n        };\n        // Doctor Management APIs\n        this.doctor = {\n            register: (doctorData)=>this.makeRequest(\"/doctors/register\", {\n                    method: \"POST\",\n                    body: doctorData\n                }),\n            getProfile: ()=>this.makeRequest(\"/doctors/profile\"),\n            updateProfile: (profileData)=>this.makeRequest(\"/doctors/profile\", {\n                    method: \"PUT\",\n                    body: profileData\n                }),\n            getAvailability: ()=>this.makeRequest(\"/doctors/availability\"),\n            updateAvailability: (availabilityData)=>this.makeRequest(\"/doctors/availability\", {\n                    method: \"PUT\",\n                    body: availabilityData\n                }),\n            search: function() {\n                let params = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n                const queryString = new URLSearchParams(params).toString();\n                return _this.makeRequest(\"/doctors/search?\".concat(queryString));\n            },\n            getSpecializations: ()=>this.makeRequest(\"/doctors/specializations\")\n        };\n        // Admin Management APIs\n        this.admin = {\n            getUsers: function() {\n                let params = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n                const queryString = new URLSearchParams(params).toString();\n                return _this.makeRequest(\"/admin/users?\".concat(queryString));\n            },\n            updateUserStatus: (userId, isActive, reason)=>this.makeRequest(\"/admin/users/\".concat(userId, \"/status\"), {\n                    method: \"PUT\",\n                    body: {\n                        isActive,\n                        reason\n                    }\n                }),\n            getUserAnalytics: (period)=>{\n                const queryString = period ? \"?period=\".concat(period) : \"\";\n                return this.makeRequest(\"/admin/users/analytics\".concat(queryString));\n            },\n            getPendingDoctors: function() {\n                let params = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n                const queryString = new URLSearchParams(params).toString();\n                return _this.makeRequest(\"/admin/doctors/pending?\".concat(queryString));\n            },\n            approveDoctor: (doctorId, action, reason, assignPatients)=>this.makeRequest(\"/admin/doctors/\".concat(doctorId, \"/approve\"), {\n                    method: \"PUT\",\n                    body: {\n                        action,\n                        reason,\n                        assignPatients\n                    }\n                })\n        };\n        // Generic helpers\n        this.get = function(endpoint) {\n            let params = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n            const queryString = Object.keys(params).length ? \"?\".concat(new URLSearchParams(params).toString()) : \"\";\n            return _this.makeRequest(\"\".concat(endpoint).concat(queryString));\n        };\n        this.post = (endpoint, body)=>this.makeRequest(endpoint, {\n                method: \"POST\",\n                body\n            });\n        this.put = (endpoint, body)=>this.makeRequest(endpoint, {\n                method: \"PUT\",\n                body\n            });\n        this.delete = (endpoint, body)=>this.makeRequest(endpoint, {\n                method: \"DELETE\",\n                body\n            });\n        this.baseUrl = process.env.NEXT_PUBLIC_API_URL || \"\";\n    }\n}\n// Create singleton instance\nconst apiClient = new ApiClient();\n// Hook for error handling\nconst useApiError = ()=>{\n    const handleApiError = (error)=>{\n        // You can integrate with your toast notification system here\n        console.error(\"API Error:\", error);\n    // Example: show toast notification\n    // toast.error(error)\n    };\n    return {\n        handleApiError\n    };\n};\n// Loading state management\nconst createLoadingState = ()=>{\n    return {\n        loading: false,\n        error: null,\n        data: null\n    };\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (apiClient);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/api-client.ts\n"));

/***/ })

});